{"version":3,"sources":["components/Feedback/FeedbackOptions.js","components/SectionTitle/SectionTitle.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","SectionTitle","children","Notification","messadge","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","buttonClick","target","innerText","console","log","prev","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAUeA,EANQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,gBAAV,OACrB,8BAAMD,EAAQE,KAAI,SAACC,GAAD,OAAW,wBAASC,KAAK,SAAsBC,QAASJ,EAA7C,SAA+DE,GAAnCA,SCI5CG,MANf,YAAqC,IAAbC,EAAY,EAAZA,SAEpB,OAAO,8BAAOA,KCKHC,EANI,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACnB,OAAQ,4BAAIA,KCcCC,EAfE,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,QAAQC,EAAgC,EAAhCA,IAAIC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBACxC,OAAY,IAARD,EACK,cAAC,EAAD,UAAc,cAAC,EAAD,CAAcL,SAAQ,wBAG1C,gCACC,cAAC,EAAD,UAAc,sLAAiCE,OAC/C,cAAC,EAAD,UAAc,8MAAqCC,OACnD,cAAC,EAAD,UAAc,gLAAgCC,OAC9C,cAAC,EAAD,UAAc,yKAA8BC,OAC5C,cAAC,EAAD,UAAc,yOAA4CC,EAA5C,aCqCLC,MA9Cf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAmBF,mBAAS,GAA5B,mBAAOJ,EAAP,KAAWO,EAAX,KAyBMC,EAAmB,WACrB,OAAOV,EAAKC,EAAQC,GAMtB,OACE,qCACG,eAAC,EAAD,WACA,uDACA,cAAC,EAAD,CAAiBb,QAnCX,CAAC,OAAO,UAAU,OAmCUC,gBAhCjB,SAAAqB,GACtB,IAAMC,EAAYD,EAAME,OAAOC,UAG/B,OAFAC,QAAQC,IAAIL,GAEJC,GACN,IAAK,OACHL,GAAQ,SAAAU,GAAI,OAAEA,EAAK,KACnB,MAEF,IAAK,UACHT,GAAW,SAAAS,GAAI,OAAEA,EAAK,KACtB,MAEF,IAAK,MACHR,GAAO,SAAAQ,GAAI,OAAEA,EAAK,KAClB,MAEF,QACE,WAeC,+CAEA,cAAC,EAAD,CAAYjB,KAAMA,EAAME,IAAKA,EAAKD,QAASA,EAASE,MAAOO,IAAsBN,mBAXlD,WAClC,IAAMA,EAAwB,IAALJ,EAASU,IAClC,OAAOQ,KAAKC,MAAMf,GASsFgB,SCzC9GC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.49fcddc2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst FeedbackOptions= ({options,onLeaveFeedback})=>(\r\n  <div>{options.map((option)=>(<button  type=\"button\" key={option} onClick={onLeaveFeedback}>{option}</button>\r\n  ))}</div>\r\n\r\n)\r\n\r\nexport default FeedbackOptions;","\r\nimport React from 'react';\r\n  \r\nfunction SectionTitle({ children }) {\r\n   \r\n    return <div >{children}</div>;\r\n  }\r\n  \r\n\r\nexport default SectionTitle;\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Notification=({messadge})=>{\r\n  return  <p>{messadge}</p>\r\n}\r\n\r\n\r\n\r\nexport default Notification;","\r\nimport SectionTitle from '../SectionTitle'\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics=({good,neutral,bad,total,positivePercentage})=>{\r\n  if (total===0) {\r\n    return <SectionTitle><Notification messadge={`No feedback given`}/></SectionTitle>;\r\n  }\r\n   return (\r\n     <div>\r\n      <SectionTitle><p>Кол-во хороших комментариев: {good}</p></SectionTitle>\r\n      <SectionTitle><p>Кол-во нейтральных комментариев: {neutral}</p></SectionTitle>\r\n      <SectionTitle><p>Кол-во плохих комментариев: {bad}</p></SectionTitle>\r\n      <SectionTitle><p>Общее кол-во комментариев:{total}</p></SectionTitle>\r\n      <SectionTitle><p>% хороших комментариев от общего кол-ва:{positivePercentage}%</p></SectionTitle>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import {useState} from 'react';\r\nimport FeedbackOptions from './components/Feedback'\r\nimport Statistics from './components/Statistics'\r\nimport SectionTitle from './components/SectionTitle'\r\n\r\nfunction App(){\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad,setBad]=useState(0);\r\n  const option=['good','neutral','bad'];\r\n  \r\n\r\n  const onLeaveFeedback = event => {\r\n    const buttonClick=event.target.innerText\r\n    console.log(event)\r\n\r\n    switch (buttonClick) {\r\n      case 'good':\r\n        setGood(prev=>prev+1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(prev=>prev+1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(prev=>prev+1);\r\n        break;  \r\n\r\n      default:\r\n        return;\r\n    }}\r\n   \r\n  const countTotalFeedback=()=>{\r\n      return good+neutral+bad\r\n    }\r\n  const countPositiveFeedbackPercentage=()=>{\r\n      const positivePercentage=good*100/countTotalFeedback()\r\n      return Math.round(positivePercentage)\r\n    }\r\n    return (\r\n      <>\r\n         <SectionTitle>\r\n         <h1>Please leave feedback</h1>        \r\n         <FeedbackOptions options={option} onLeaveFeedback={onLeaveFeedback}/>              \r\n         <h3>Statistics</h3>\r\n         </SectionTitle>        \r\n         <Statistics good={good} bad={bad} neutral={neutral} total={countTotalFeedback()} positivePercentage={countPositiveFeedbackPercentage()} />\r\n      </>);   \r\n}\r\n\r\nexport default App;\r\n\r\n\r\n    \r\n  \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}